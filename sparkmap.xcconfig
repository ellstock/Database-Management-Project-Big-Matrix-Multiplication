
def mapper(x):
    map = []
    if x[0] == "A":
        for i in range(2):
            key = "A" + str(i)
            if x[1] == str(i):
                map.append([(key,x[2]),x[3]])
    else:
        for i in range(2):
            key = "B" + str(i)
            if x[2] == str(i):
                map.append([(key,x[1]),x[3]])
    return(map)



def mapper2(x):
    A_list = [0]*(2*2)
    B_list = [0]*(2*2)
    temp = max(2,2)
    for i in range(0,temp):
        matrc = x[0][0]
        cr = int(x[0][1])
        val = int(x[1])
        cr, val = map(int,[cr,val])
        if matrc == "A" + str(i):
            A_list[2*i + cr] = val
        if matrc == "B" + str(i):
            B_list[2*i + cr] = val


def mapper2(x):
    A_list = [0] * (2*2)
    B_list = [0] * (2*2)
    temp = max(2,2)
    for i in range(0,2):
        matrc = x[0][0]
        cr = int(x[0][1])
        val = int(x[1])
        if matrc == "A" + str(i):
            A_list[2*i + cr] = val
        else:
            B_list[2*i + cr] = val
    return A_list,B_list

def mapper2(x):
    for i in range(0,2):
        if x[0][0] == "A" + str(i):
            A_list[2*i + int(x[0][1])] = int(x[1])
        if x[0][0] == "B" + str(i):
            B_list[2*i + int(x[0][1])] = int(x[1])
    return A_list,B_list


remember to sortByKey after first mapper!
also if needed use sc.parallelize to transform pipeline into RDD!
