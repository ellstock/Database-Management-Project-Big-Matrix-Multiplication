{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red47\green255\blue18;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb0 \CocoaLigature0 ## Reading the data:\
\
>>> data = sc.textFile("file:////Users/laks/Desktop/Polytechnique/Cours/\
Database\\ Management\\ II\\ \\(MAP543\\)/Project/matrix1.txt")\
\
['A,0,0,1.0', 'A,0,1,2.0', 'A,0,2,3.0', 'A,1,0,4.0', 'A,1,1,5.0', 'A,1,2,6.0', 'B,0,0,1.0', 'B,0,1,2.0', 'B,1,0,3.0', 'B,1,1,4.0', 'B,2,0,5.0', 'B,2,1,6.0']\
\
## Splitting elements of our file:\
\
>>> data.map(lambda x: x.split(',')).collect()\
\
[['A', '0', '0', '1.0'], ['A', '0', '1', '2.0'], ['A', '0', '2', '3.0'], ['A', '1', '0', '4.0'], ['A', '1', '1', '5.0'], ['A', '1', '2', '6.0'], ['B', '0', '0', '1.0'], ['B', '0', '1', '2.0'], ['B', '1', '0', '3.0'], ['B', '1', '1', '4.0'], ['B', '2', '0', '5.0'], ['B', '2', '1', '6.0']]\
\
x[0] = provenance\
x[1] = row\
x[2] = col\
x[3] = value\
\
## C\'92est li boudel mais ya de l\'92id\'e9e!\
\
>>> data.map(lambda x: x.split(',')).map(lambda x: [((x[1],0),(x[3])),((x[1],1),(x[3]))] if x[0] == 'A' else [((0,x[2]),(x[3])),((1,x[2]),(x[3]))] ).map(lambda x: (x[0],x[1])).collect()\
[((('0', 0), '1.0'), (('0', 1), '1.0')), ((('0', 0), '2.0'), (('0', 1), '2.0')), ((('0', 0), '3.0'), (('0', 1), '3.0')), ((('1', 0), '4.0'), (('1', 1), '4.0')), ((('1', 0), '5.0'), (('1', 1), '5.0')), ((('1', 0), '6.0'), (('1', 1), '6.0')), (((0, '0'), '1.0'), ((1, '0'), '1.0')), (((0, '1'), '2.0'), ((1, '1'), '2.0')), (((0, '0'), '3.0'), ((1, '0'), '3.0')), (((0, '1'), '4.0'), ((1, '1'), '4.0')), (((0, '0'), '5.0'), ((1, '0'), '5.0')), (((0, '1'), '6.0'), ((1, '1'), '6.0'))]\
\
\
Another possibility\'85\
\
\
\
>>> data.flatMap(lambda x: x.split(',')).collect()\
\
['A', '0', '0', '1.0', 'A', '0', '1', '2.0', 'A', '0', '2', '3.0', 'A', '1', '0', '4.0', 'A', '1', '1', '5.0', 'A', '1', '2', '6.0', 'B', '0', '0', '1.0', 'B', '0', '1', '2.0', 'B', '1', '0', '3.0', 'B', '1', '1', '4.0', 'B', '2', '0', '5.0', 'B', '2', '1', '6.0']\
\
##  taking B transpose:\
\
>>> data.map(lambda x: x.split(',')).map(lambda x: ((x[0],x[1],x[2]),(x[3])) if x[0] == 'A' else ((x[0],x[2],x[1]),(x[3]))).collect()\
\
[(('A', '0', '0'), '1.0'), (('A', '0', '1'), '2.0'), (('A', '0', '2'), \
'3.0'), (('A', '1', '0'), '4.0'), (('A', '1', '1'), '5.0'), (('A', '1', '2'), '6.0'), (('B', '0', '0'), '1.0'), (('B', '1', '0'), '2.0'), (('B', '0', '1'), '3.0'), (('B', '1', '1'), '4.0'), (('B', '0', '2'), '5.0'), (('B', '1', '2'), '6.0')]\
\
}